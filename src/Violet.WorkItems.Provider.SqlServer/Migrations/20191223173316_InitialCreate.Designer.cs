// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Violet.WorkItems.Provider.SqlServer;

namespace Violet.WorkItems.Provider.SqlServer.Migrations
{
    [DbContext(typeof(WorkItemDbContext))]
    [Migration("20191223173316_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Violet.WorkItems.WorkItem", b =>
                {
                    b.Property<string>("ProjectCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("WorkItemType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProjectCode", "Id");

                    b.ToTable("WorkItems");
                });

            modelBuilder.Entity("Violet.WorkItems.WorkItem", b =>
                {
                    b.OwnsMany("Violet.WorkItems.LogEntry", "Log", b1 =>
                        {
                            b1.Property<string>("ProjectCode")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<string>("Id")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<DateTimeOffset>("Date")
                                .HasColumnType("datetimeoffset");

                            b1.Property<string>("Comment")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("User")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("ProjectCode", "Id", "Date");

                            b1.ToTable("LogEntry");

                            b1.WithOwner()
                                .HasForeignKey("ProjectCode", "Id");

                            b1.OwnsMany("Violet.WorkItems.PropertyChange", "Changes", b2 =>
                                {
                                    b2.Property<string>("ProjectCode")
                                        .HasColumnType("nvarchar(450)");

                                    b2.Property<string>("Id")
                                        .HasColumnType("nvarchar(450)");

                                    b2.Property<DateTimeOffset>("Date")
                                        .HasColumnType("datetimeoffset");

                                    b2.Property<string>("Name")
                                        .HasColumnType("nvarchar(450)");

                                    b2.Property<string>("NewValue")
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("OldValue")
                                        .HasColumnType("nvarchar(max)");

                                    b2.HasKey("ProjectCode", "Id", "Date", "Name");

                                    b2.ToTable("PropertyChange");

                                    b2.WithOwner()
                                        .HasForeignKey("ProjectCode", "Id", "Date");
                                });
                        });

                    b.OwnsMany("Violet.WorkItems.Property", "Properties", b1 =>
                        {
                            b1.Property<string>("ProjectCode")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<string>("Id")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<string>("Name")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<string>("DataType")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Value")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("ProjectCode", "Id", "Name");

                            b1.ToTable("Property");

                            b1.WithOwner()
                                .HasForeignKey("ProjectCode", "Id");
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
