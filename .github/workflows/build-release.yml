name: Build-Release

on:
  push:
    tags: v*

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
    steps:
    - uses: actions/checkout@v1
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.100
    - name: Build Violet WorkItems
      run: dotnet build --configuration Release
  test:
    runs-on: ubuntu-latest
    needs: [ build ]
    env:
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
    steps:
    - uses: actions/checkout@v1
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.100
    - name: Run Test Suite
      run: dotnet test --no-build --configuration Release --filter OnDataProvider!=SqlServer
  pack:
    runs-on: ubuntu-latest
    needs: [ test ]
    env:
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
    steps:
    - uses: actions/checkout@v1
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.100
    - name: Build Version
      run: echo ::set-env name=RELEASE_VERSION::$(echo ${GITHUB_REF:11})
    - name: Pack
      run: dotnet pack --output ./artifacts --configuration Release -p:Version=$RELEASE_VERSION
    - uses: actions/upload-artifact@v1
      with:
        name: artifacts
        path: ./artifacts
  publish-github:
    runs-on: ubuntu-latest
    needs: [ pack ]
    env:
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
    steps:
    - uses: actions/checkout@v1
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.100
    - uses: actions/download-artifact@v1
      with:
        name: artifacts
        path: ./artifacts
    - name: Setup nuget config (1)
      run: sed 's/GITHUB_TOKEN/${{ secrets.GITHUB_TOKEN }}/g' ./build/.nuget.config > nuget.config_stage1
    - name: Setup nuget config (2)
      run: sed 's/GITHUB_USER/${{ github.actor }}/g' nuget.config_stage1 > nuget.config
#    - name: Upload to GitHub Packages
#      run: dotnet nuget push ./artifacts/**.nupkg --source "github"
#    - name: Upload to GitHub Packages
#      run: dotnet nuget push ./artifacts/**.nupkg --source https://nuget.pkg.github.com/violetgrass/index.json --api-key ${{ secrets.GITHUB_TOKEN }}
    - name: Upload to GitHub Packages
      run: |
           for f in ./artifacts/*.nupkg
           do
             dotnet nuget push $f --source "github"
           done
      shell: bash
